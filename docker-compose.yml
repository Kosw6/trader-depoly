services:
  db:
    image: timescale/timescaledb:latest-pg17
    container_name: db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      TZ: ${TZ}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./docker/20_restore.sh:/docker-entrypoint-initdb.d/20_restore.sh:ro
      - ./docker/trader.dump:/docker-entrypoint-initdb.d/trader.dump:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks: [appnet]

  app:
    image: ${APP_IMAGE} # ← Hub 경로 사용 (build 없음!)
    container_name: app
    environment:
      TZ: ${TZ}
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/${POSTGRES_DB}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "${APP_PORT}:8080"
    networks: [appnet]

networks:
  appnet:
    driver: bridge

volumes:
  db_data:
